{"version":3,"sources":["Cards.js","TwitterTabs.js","UserMessages.js","Messages.js","Videos.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","maxWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Cards","useState","tweets","setTweets","useEffect","fetch","then","res","json","data","console","log","classes","map","t","Link","to","Card","className","variant","CardContent","Avatar","src","Typography","component","textAlign","author","msgText","CardActions","color","Tabs","Tab","UserMessages","id","useParams","_id","megText","Button","size","drawerWidth","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","breakpoints","up","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","Messages","useTheme","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","onClick","edge","noWrap","label","InputBase","placeholder","input","inputProps","Drawer","anchor","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Videos","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6iBAaMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,SAAU,KAEZC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MAIH,SAASC,IACvB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEDC,qBAAU,WACRC,MAAM,0DACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJN,EAAUM,GACPA,GACLC,QAAQC,IAAIT,QAIZ,IACA,IAAMU,EAAUzB,IACcyB,EAAQpB,OAEtC,OADAkB,QAAQC,IAAI,QAAST,GAClBA,EACEA,EAAOW,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,SACG,eAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQvB,KAAM8B,QAAQ,WAAvC,UACE,eAACC,EAAA,EAAD,WACE,gCACE,cAACC,EAAA,EAAD,CAAQC,IAAI,sBACZ,cAACC,EAAA,EAAD,CAAYJ,QAAQ,KAAKK,UAAU,KAAKC,UAAU,OAAlD,SACGX,EAAEY,YAGP,uBAEA,cAACH,EAAA,EAAD,CAAYJ,QAAQ,QAAQK,UAAU,IAAtC,SACGV,EAAEa,aAGP,eAACC,EAAA,EAAD,WAEE,cAAC,IAAD,CAAUC,MAAM,WAChB,cAAC,IAAD,CAAOA,MAAM,WAHf,wBAgBF,U,8BCnCHC,EAAA,EACUC,EAAA,EACAA,EAAA,EACAA,EAAA,E,aCtCL5C,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZE,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MAIH,SAASiC,KAEtB,IAAQC,EAAOC,cAAPD,GACFrB,EAAUzB,IAChB,EAA4Bc,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGFC,qBAAU,WACRC,MAAM,yDAAD,OAHS,6BAIbC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJN,EAAUM,GACPA,GACLC,QAAQC,IAAIT,QAIZ,IAC8BU,EAAQpB,OAKtC,OACE,mCACGU,EACC,eAACe,EAAA,EAAD,CAAMC,UAAWN,EAAQvB,KAAM8B,QAAQ,WAAvC,UACE,eAACC,EAAA,EAAD,WACE,gCACE,cAACC,EAAA,EAAD,CAAQC,IAAI,sBACZ,cAACC,EAAA,EAAD,CAAYJ,QAAQ,KAAKK,UAAU,KAAKC,UAAU,OAAlD,SACGvB,EAAOiC,SAGZ,uBAEA,cAACZ,EAAA,EAAD,CAAYJ,QAAQ,QAAQK,UAAU,IAAtC,SACGtB,EAAOkC,aAGZ,cAACR,EAAA,EAAD,UACE,cAACS,EAAA,EAAD,CAAQC,KAAK,QAAb,6BAKJ,mBAAqBL,ICvC7B,IAAMM,GAAc,IAEdpD,GAAYC,aAAW,SAACoD,GAAD,MAAY,CACvCnD,KAAM,CACJI,QAAS,QAGXgD,OAAQ,CACNC,WAAYF,EAAMG,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBX,GAAjB,OACLY,WAAYZ,GACZG,WAAYF,EAAMG,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQL,EAAMG,YAAYE,OAAOO,QACjCL,SAAUP,EAAMG,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAaf,EAAMgB,QAAQ,IAE7BC,KAAM,CACJhE,QAAS,QAEXiE,OAAQ,CACNR,MAAOX,GACPoB,WAAY,GAEdC,YAAa,CACXV,MAAOX,IAETsB,aAAa,yBACXpE,QAAS,OACTqE,WAAY,SACZC,QAASvB,EAAMgB,QAAQ,EAAG,IAEvBhB,EAAMwB,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASvB,EAAMgB,QAAQ,GACvBd,WAAYF,EAAMG,YAAYC,OAAO,SAAU,CAC7CC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,gBAEvCG,YAAY,KAEdkB,aAAc,CACZ3B,WAAYF,EAAMG,YAAYC,OAAO,SAAU,CAC7CC,OAAQL,EAAMG,YAAYE,OAAOO,QACjCL,SAAUP,EAAMG,YAAYI,SAASM,iBAEvCF,WAAY,GAEdmB,OAAO,aACLC,SAAU,WACVC,aAAchC,EAAMiC,MAAMD,aAC1BE,gBAAiBC,YAAMnC,EAAMoC,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,YAAMnC,EAAMoC,QAAQC,OAAOC,MAAO,MAErD3B,WAAY,GACZD,MAAO,QACNV,EAAMuC,YAAYC,GAAG,MAAQ,CAC5B7B,WAAYX,EAAMgB,QAAQ,GAC1BN,MAAO,SAGX+B,WAAY,CACVlB,QAASvB,EAAMgB,QAAQ,EAAG,GAC1B0B,OAAQ,OACRX,SAAU,WACVY,cAAe,OACf1F,QAAS,OACTqE,WAAY,SACZI,eAAgB,UAElBkB,UAAW,CACTvD,MAAO,WAETwD,WAAW,aACTtB,QAASvB,EAAMgB,QAAQ,EAAG,EAAG,EAAG,GAEhC8B,YAAY,cAAD,OAAgB9C,EAAMgB,QAAQ,GAA9B,OACXd,WAAYF,EAAMG,YAAYC,OAAO,SACrCM,MAAO,QACNV,EAAMuC,YAAYC,GAAG,MAAQ,CAC5B9B,MAAO,OACP,UAAW,CACTA,MAAO,cAOA,SAASqC,KAEtB,IAAM3E,EAAUzB,KACVqD,EAAQgD,cACd,EAAwBC,IAAMxF,UAAS,GAAvC,mBAAOyF,EAAP,KAAaC,EAAb,KAUA,OACE,sBAAKzE,UAAWN,EAAQvB,KAAxB,UACE,cAACuG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEtB,SAAS,QACTrD,UAAW4E,YAAKlF,EAAQ6B,OAAT,eACZ7B,EAAQqC,YAAcyC,IAH3B,SAME,eAACK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEnE,MAAM,UACN,aAAW,cACXoE,QArBe,WACvBN,GAAQ,IAqBAO,KAAK,QACLhF,UAAW4E,YAAKlF,EAAQ0C,WAAYoC,GAAQ9E,EAAQ6C,MALtD,SAOE,cAAC,IAAD,MAEF,cAAClC,EAAA,EAAD,CAAYJ,QAAQ,KAAKgF,QAAM,EAA/B,yBAIE,eAACrE,EAAA,EAAD,CAAM,aAAW,sBAAjB,UACA,eAAC,IAAD,CAAMd,GAAG,YAAT,UACG,IACD,cAACe,EAAA,EAAD,CAAKqE,MAAM,gBAEb,cAAC,IAAD,CAAMpF,GAAG,SAAT,SACE,cAACe,EAAA,EAAD,CAAKqE,MAAM,YAEZ,cAAC,IAAD,CAAMpF,GAAG,kCAAT,SACC,cAACe,EAAA,EAAD,CAAKqE,MAAM,YAEb,cAAC,IAAD,CAAMpF,GAAG,UAAT,SACA,cAACe,EAAA,EAAD,CAAKqE,MAAM,gBAGb,cAACC,EAAA,EAAD,CACEC,YAAY,eACZ1F,QAAS,CACPvB,KAAMuB,EAAQwE,UACdmB,MAAO3F,EAAQyE,YAEjBmB,WAAY,CAAE,aAAc,iBAIlC,eAACC,EAAA,EAAD,CACEvF,UAAWN,EAAQ8C,OACnBvC,QAAQ,aACRuF,OAAO,OACPhB,KAAMA,EACN9E,QAAS,CACP+F,MAAO/F,EAAQgD,aANnB,UASE,qBAAK1C,UAAWN,EAAQiD,aAAxB,SACE,cAACmC,EAAA,EAAD,CAAYC,QA9DM,WACxBN,GAAQ,IA6DF,SACuB,QAApBnD,EAAMoE,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,QAIN,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACG,CAAC,UAAW,iBAAiBjG,KAAI,SAACkG,EAAMC,GAAP,OAChC,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACGH,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAgB,cAAC,IAAD,MAErC,cAACI,EAAA,EAAD,CAAcC,QAASN,MAJHA,QAQ1B,cAACF,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACG,CAAC,YAAYjG,KAAI,SAACkG,EAAMC,GAAP,OAChB,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACqB,cAAC,IAAD,MAErB,cAACC,EAAA,EAAD,CAAcC,QAASN,MAJHA,WAW5B,uBACE7F,UAAW4E,YAAKlF,EAAQuD,QAAT,eACZvD,EAAQyD,aAAeqB,IAF5B,UAKE,qBAAKxE,UAAWN,EAAQiD,eAEvB,cAAC7D,EAAD,UCnPQ,SAASsH,KAExB,MAAQ,6BCgDKC,OAhCf,WACA,OACI,qBAAKrG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEK,cAAC,GAAD,IACE,eAAC,IAAD,WACH,eAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAlB,UACC,cAAC,GAAD,IAAa,IADd,+BAIA,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,UACG,IACF,eAAC,IAAD,WACA,cAACzF,GAAD,IACC,UAGF,eAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,UAAlB,UAC8D,IAC5D,cAAC,GAAD,gBC9BGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtH,MAAK,YAAkD,IAA/CuH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACM,cAAC,IAAD,UACJ,cAAC,GAAD,QAGFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.d2778635.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport Share from \"@material-ui/icons/Share\";\r\nimport Link  from \"@material-ui/core/Link\";\r\n\r\n// import Favorite from \"material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 900\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n// Favorite\r\nexport default function Cards() {\r\n const [tweets, setTweets] = useState(null)\r\n\r\nuseEffect(()=>{\r\n  fetch(`https://mini-twitter-cross-over.herokuapp.com/messages`)\r\n  .then(res=>res.json())\r\n  .then(data=>{\r\n    setTweets(data)\r\n    if(data){\r\n  console.log(tweets)\r\n    }\r\n  }\r\n    )\r\n},[])\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n  console.log(\"Cards\", tweets);\r\n  if(tweets){\r\nreturn tweets.map((t) => (\r\n <Link to=\"/users/0\">\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <div>\r\n          <Avatar src=\"/broken-image.jpg\" />\r\n          <Typography variant=\"h5\" component=\"h2\" textAlign=\"left\">\r\n            {t.author}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {t.msgText}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n        <Favorite color=\"action\" />\r\n        <Share color=\"action\" />\r\n \r\n Read more.\r\n \r\n        {/* <Favorite /> */}\r\n      </CardActions>\r\n    </Card>\r\n    </Link>\r\n  ));\r\n  \r\n  }\r\n  else{\r\n   return (\r\n    'Loading'\r\n   )\r\n  }\r\n  \r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nexport default function TwitterTabs() {\r\n \r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Messages</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/video\">Video</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/users\">Top News</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route exact path=\"/Top News\">\r\n            <TopNews />\r\n          </Route>\r\n          <Route exact path=\"/videos\">\r\n            <Videos />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Messages />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n<Tabs   aria-label=\"simple tabs example\">\r\n          <Tab label=\"Messages\" />\r\n          <Tab label=\"Videos\" />\r\n          <Tab label=\"Top News\"  />\r\n          </Tabs>\r\nfunction Messages() {\r\n  return <Tabs   aria-label=\"simple tabs example\">\r\n          <Tab label=\"Messages\" />\r\n          </Tabs>;\r\n}\r\n\r\nfunction Videos() {\r\n  return <Tabs   aria-label=\"simple tabs example\">\r\n          <Tab label=\"Videos\" />\r\n          </Tabs>;\r\n}\r\n\r\nfunction TopNews() {\r\n   return <Tabs   aria-label=\"simple tabs example\">\r\n          <Tab label=\"Top News\" />\r\n          </Tabs>;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import Favorite from \"material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\nexport default function UserMessages() {\r\n \r\n  const { id } = useParams();\r\n  const classes = useStyles();\r\n  const [tweets, setTweets] = useState(null)\r\n  const Userid =\"60f29968f95486a16b0c5bbc\"\r\n\r\nuseEffect(()=>{\r\n  fetch(`http://mini-twitter-cross-over.herokuapp.com/messages/${Userid}`)\r\n  .then(res=>res.json())\r\n  .then(data=>{\r\n    setTweets(data)\r\n    if(data){\r\n  console.log(tweets)\r\n    }\r\n  }\r\n    )\r\n},[])\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n  // fetch inside a useEffect\r\n  // url = `api/messages/${id}`;\r\n\r\n\r\n  return (\r\n    <>\r\n      {tweets ? (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <div>\r\n              <Avatar src=\"/broken-image.jpg\" />\r\n              <Typography variant=\"h5\" component=\"h2\" textAlign=\"left\">\r\n                {tweets._id}\r\n              </Typography>\r\n            </div>\r\n            <br />\r\n\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {tweets.megText}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\">Learn More</Button>\r\n            {/* <Favorite /> */}\r\n          </CardActions>\r\n        </Card>\r\n      ) : (\r\n        \"loading message \" + id\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { alpha, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Settings from \"@material-ui/icons/Mail\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport Cards from \"./Cards\";\r\nimport TwitterTabs from \"./TwitterTabs\"\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {useState, useEffect} from 'react'\r\nimport { Switch, Link, Route } from \"react-router-dom\";\r\nimport UserMessages from \"./UserMessages\"\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 40,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\"\r\n      }\r\n    }\r\n  }\r\n}\r\n));\r\n\r\nexport default function Messages() {\r\n \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            MVP Twitter\r\n          </Typography>\r\n          {/* <TwitterTabs /> */}\r\n            <Tabs aria-label=\"simple tabs example\">\r\n            <Link to=\"/messages\">\r\n              {\" \"}\r\n              <Tab label=\"Messages\" />\r\n            </Link>\r\n            <Link to=\"/users\">\r\n              <Tab label=\"Users\" />\r\n            </Link>\r\n             <Link to=\"/users/60f29968f95486a16b0c5bbc\">\r\n              <Tab label=\"Users\" />\r\n            </Link>\r\n            <Link to=\"/videos\">\r\n            <Tab label=\"Videos\" />\r\n            </Link>\r\n          </Tabs>\r\n          <InputBase\r\n            placeholder=\"Searchâ€¦\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput\r\n            }}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Profile\", \"Notifications\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"Settings\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <Settings /> : <Settings />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {/* Trying for Tabs. */}\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {/* Write your code here */}\r\n         <Cards />\r\n       \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"," import react from \"react\";\r\n \r\n\r\n \r\n export default  function Videos() \r\n{\r\n  return ('Enjoy some amazing Videos!')\r\n}","\nimport './App.css';\nimport TwitterPage from \"./Messages\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport UserMessages from \"./UserMessages\";\nimport Cards from \"./Cards\";\nimport Messages from \"./Messages\";\nimport Videos from \"./Videos\";\n\n\n// App\n//     fetches nothing\n//     just have switch with routes\n// Messages \n//     fetch -> messages\n\n// MessagesForUser\n//     fetch -> message \n\n// Message (\"messages/:id\")\n//     fetch -> one message\n\nfunction App() {\nreturn(\n    <div className=\"App\">\n      <header className=\"App-header\">\n         \n           <Messages />\n             <Switch>\n          <Route exact path=\"/\">\n           <Messages />{\" \"} \n            HELLO WELCOME TO HOMEPAGE\n          </Route>\n          <Route exact path=\"/user/\">\n            {\" \"}\n           <Link>\n           <UserMessages />\n           {\" \"}</Link>\n            \n          </Route>\n          <Route exact path=\"/videos\">\n            {/* access the id with useParams in the child component */}{\" \"}\n            <Videos />\n          </Route>\n        </Switch>\n        \n      </header>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n\n \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n        <BrowserRouter>\n    <App />\n        </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}