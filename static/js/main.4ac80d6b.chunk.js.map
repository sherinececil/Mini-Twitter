{"version":3,"sources":["Cards.js","TwitterPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Cards","tweets","classes","console","log","map","t","Card","className","variant","CardContent","Avatar","src","Typography","component","textAlign","author","message","CardActions","color","drawerWidth","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","breakpoints","up","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","TwitterPage","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","onClick","edge","noWrap","InputBase","placeholder","input","inputProps","Drawer","anchor","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","App","setTweets","useEffect","fetch","then","res","json","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac80d6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport Share from \"@material-ui/icons/Share\";\r\n\r\n// import Favorite from \"material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n// Favorite\r\nexport default function Cards({ tweets }) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n  console.log(\"Cards\", tweets);\r\n  return tweets.map((t) => (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <div>\r\n          <Avatar src=\"/broken-image.jpg\" />\r\n          <Typography variant=\"h5\" component=\"h2\" textAlign=\"left\">\r\n            {t.author}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {t.message}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n        <Favorite color=\"action\" />\r\n        <Share color=\"action\" />\r\n\r\n        {/* <Favorite /> */}\r\n      </CardActions>\r\n    </Card>\r\n  ));\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { alpha, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Settings from \"@material-ui/icons/Mail\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport Cards from \"./Cards\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 40,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function TwitterPage({ tweets }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            MVP Twitter\r\n          </Typography>\r\n          <InputBase\r\n            placeholder=\"Searchâ€¦\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput\r\n            }}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Profile\", \"Notifications\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"Settings\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <Settings /> : <Settings />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {/* Write your code here */}\r\n        <Cards tweets={tweets} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport {useState, useEffect} from 'react'\nimport TwitterPage from \"./TwitterPage\";\n\nfunction App() {\nconst [tweets, setTweets] = useState(\n  [{\"_id\":\"123\",\"username\":\"bob\", \"message\":\"this is an example\",}, \n  {\"_id\":\"235\",\"username\":\"greg\", \"message\":\"Hey there!!!\"},\n  {\"_id\":\"456\",\"username\":\"sally\", \"message\":\"Stay there.\"} ]\n)\n\nuseEffect(()=>{\n  fetch(`https://fake-tweets-api.herokuapp.com/posts`)\n  .then(res=>res.json())\n  .then(data=>{\n    setTweets(data)\n    if(data){\n  console.log(tweets)\n    }\n  }\n    )\n},[])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <TwitterPage tweets={tweets} />\n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}